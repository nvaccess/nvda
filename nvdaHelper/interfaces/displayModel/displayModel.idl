/*
This file is a part of the NVDA project.
URL: http://www.nvda-project.org/
Copyright 2006-2010 NVDA contributers.
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License version 2.0, as published by
    the Free Software Foundation.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
This license can be found at:
http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
*/

cpp_quote("/*")
cpp_quote("This file is a part of the NVDA project.")
cpp_quote("URL: http://www.nvda-project.org/")
cpp_quote("Copyright 2006-2010 NVDA contributers.")
cpp_quote("This program is free software: you can redistribute it and/or modify")
cpp_quote("it under the terms of the GNU General Public License version 2.0, as published by")
cpp_quote("the Free Software Foundation.")
cpp_quote("This program is distributed in the hope that it will be useful,")
cpp_quote("but WITHOUT ANY WARRANTY; without even the implied warranty of")
cpp_quote("MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.")
cpp_quote("This license can be found at:")
cpp_quote("http://www.gnu.org/licenses/old-licenses/gpl-2.0.html")
cpp_quote("*/")

import "wtypes.idl";

[
	uuid(F624BAF9-2020-453a-B781-05ECF6E4EF54),
	version(1.0),
]
interface DisplayModel {

/**
 * Retreaves the text within the given rectangle (in client coordinates), within the given window.
  */
	error_status_t getWindowTextInRect([in] handle_t bindingHandle, [in] const unsigned long windowHandle, const boolean includeDescendantWindows, [in] const int left, [in] const int top, [in] const int right, [in] const int bottom, [in] const int minHorizontalWhitespace, [in] const int minVerticalWhitespace, [in] const boolean stripOuterWhitespace, [out,string] BSTR* text, [out, string] BSTR* characterPoints);

	error_status_t getCaretRect([in] handle_t bindingHandle, [in] const long threadID, [out] long* left, [out] long* top, [out] long* right, [out] long* bottom);

/**
 * Get the coordinates of the current focus rectangle if it exists.
 */
	error_status_t getFocusRect([in] handle_t bindingHandle, [in] const unsigned long hwnd, [out] long* left, [out] long* top, [out] long* right, [out] long* bottom);

/**
 * Request that text change notifications be sent when text is updated in the given window.
 * @param enable if true then notifications will start or if already started a reference count will be increased. If flase then the reference count will be decreased and if it hits 0 notifications will stop.
 */
	error_status_t requestTextChangeNotificationsForWindow([in] handle_t bindingHandle, [in] const unsigned long windowHandle, [in] const BOOL enable);

}
