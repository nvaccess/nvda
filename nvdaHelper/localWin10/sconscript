###
#This file is a part of the NVDA project.
#URL: http://www.nvaccess.org/
#Copyright 2016-2017 NV Access Limited
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License version 2.0, as published by
#the Free Software Foundation.
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#This license can be found at:
#http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
###

import os
import glob

from SCons.Tool.MSCommon.vc import find_vc_pdir

Import(
	'win10env',
	'sourceDir',
	'localLib',
)

env=win10env.Clone()

localWin10Lib = env.SharedLibrary(
	target="nvdaHelperLocalWin10",
	source=[
		env['projectResFile'],
		'utils.cpp',
		'oneCoreSpeech.cpp',
		'uwpOcr.cpp',
	],
	LIBS=["oleaut32", localLib[2]],
)

# UWP dlls can only be dynamically linked with the CRT,
# but some systems might not have this version of the CRT.
# Therefore, we must include it.
# VS 2017 keeps changing the path to reflect the latest major.minor.build version which we canot easily find out.
# Therefore  Search these versioned directories from newest to oldest  to collect all the files we need.
msvc = env.get('MSVC_VERSION')
vcRedistDirs = glob.glob(os.path.join(
    find_vc_pdir(msvc),
    rf"Redist\MSVC\{msvc}*\x86\Microsoft.VC{msvc.replace('.', '')}.CRT"
))
if len(vcRedistDirs)==0:
	raise RuntimeError("Could not locate vc redistributables. Perhaps the Universal Windows Platform component in visual Studio is not installed") 
vcRedistDirs.sort(reverse=True)
for fn in ("msvcp140.dll", "vccorlib140.dll", "vcruntime140.dll"):
	for vcRedistDir in vcRedistDirs:
		path = os.path.join(vcRedistDir, fn)
		if os.path.isfile(path):
			env.Install(sourceDir, path)
			break
		else:
			raise RuntimeError("Could not locate %s. Perhaps the Universal Windows Platform component in visual Studio is not installed"%fn) 

Return(['localWin10Lib'])
