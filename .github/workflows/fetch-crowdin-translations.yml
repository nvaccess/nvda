name: Fetch Crowdin Translations

# Note: This workflow only updates tracked languages from Crowdin.concurrency:
# It may fail if new languages are added to Crowdin which are not tracked in git.
# If you want to add new languages, use the "Add new languages to track from Crowdin" workflow.
# If the new language is not ready to be tracked, exclude it in ci/crowdin.yml.

on:
  workflow_dispatch:
  schedule:
    # Every Monday at 00:00 UTC
    # This is because the translation freeze should end at 11:59 UTC on a Sunday.
    # And we want to perform beta/rc releases soon after 00:00 UTC on a Monday.
    # Cron jobs are run from the master branch.
    - cron: '0 0 * * 1'

jobs:
  download-from-crowdin:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      branchName: updateCrowdinTranslations${{ github.run_id }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: beta
        fetch-depth: 1

    - name: Download translations from Crowdin
      id: downloadTranslations
      uses: crowdin/github-action@v2
      with:
        config: ci/crowdin.yml  # taken from beta branch as per checkout
        download_translations: true
        download_sources: false
        # Avoids build warning "Warning: line 392 contained a corrupt empty translation. Using source"
        skip_untranslated_strings: true
        push_translations: true
        localization_branch_name: ${{ env.branchName }}
        pull_request_base_branch_name: beta
        commit_message: "Update translations from Crowdin"
        pull_request_title: "Update translations from Crowdin"
        push_sources: false
        upload_sources: false
        upload_translations: false
        skip_ref_checkout: true
        download_translations_args: "--iverbose --tree"
      env:
          GITHUB_TOKEN: ${{ github.token }}
          CROWDIN_PROJECT_ID: ${{ vars.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_AUTH_TOKEN }}

    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit

    - name: Run pre-commit
      id: precommit
      run: |
        # Run pre-commit on the translations
        pre-commit run checkPo --from-ref  ${{ env.branchName }} --to-ref beta &> pre-commit.log

    - name: Comment failure message
      if: ${{ steps.precommit.outcome != 'success' }}
      run: |
        # If pre-commit fails, comment on the PR with the failure message
        gh pr comment ${{ steps.downloadTranslations.outputs.pull_request_number }} \
        --body-file pre-commit.log

    - name: Merge pull request
      # Sets PR to auto-merge when checks have passed
      run: |
        gh pr merge ${{ steps.downloadTranslations.outputs.pull_request_number }} \
        --squash --delete-branch --auto \
        --body "Merged translations from Crowdin"
      env:
        GITHUB_TOKEN: ${{ github.token }}
