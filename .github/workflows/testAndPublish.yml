name: Run tests and publish

on:
  push:
    branches:
    - master
    - beta
    - rc
    - 'try-**'
    - githubActions # To be removed
    tags:
    - 'release-**'

  pull_request:
    branches:
    - master
    - beta
    - rc

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  if: $GITHUB_EVENT_NAME == 'pull_request'
  pullRequestNumber: ${{ github.event.number }}

defaults:
  run:
    shell: cmd

jobs:
  checkPot:
    runs-on: windows-latest
    steps:
    - name: Checkout NVDA
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Build NVDA
      uses: ./nvdaBuilder
      with:
        scons-source: false
    - name: Check comments for translators
      run: powershell.exe ci/scripts/tests/translationCheck.ps1
    - name: Upload artifact
      id: uploadArtifact
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: Check pot results
        path: output//nvda.pot
        overwrite: true

  licenseCheck:
    runs-on: windows-latest
    steps:
    - name: Checkout NVDA
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Build NVDA
      uses: ./nvdaBuilder
      with:
        scons-source: false
    - name: License check
      run: powershell.exe ci/scripts/tests/licenseCheck.ps1
    - name: Upload artifact
      id: uploadArtifact
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: License check results
        path: testOutput/license/licenseCheckResults.md
        overwrite: true

  unitTests:
    runs-on: windows-latest
    steps:
    - name: Checkout NVDA
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Build NVDA
      uses: ./nvdaBuilder
    - name: Run unit tests
      run: powershell.exe ci/scripts/tests/unitTests.ps1
    - name: Upload artifact
      id: uploadArtifact
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: Unit tests results
        path: testOutput/unit/unitTests.xml
        overwrite: true

  systemTests:
    runs-on: windows-latest
    steps:
    - name: Checkout NVDA
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Build NVDA
      uses: ./nvdaBuilder
    - name: Run launcher
      run: scons launcher version=%version% --all-cores
    - name: Install NVDA
      run: powershell.exe ci/scripts/installNVDA.ps1
    - name: Run system tests
      run: powershell.exe ci/scripts/tests/systemTests.ps1
    - name: Upload system tests results
      id: uploadSystemTestsResults
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: System tests results
        path: testOutput/system
    - name: Upload NVDA
      id: uploadLauncher
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: NVDA launcher
        path: output/nvda*.exe
        overwrite: true

  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [checkPot, licenseCheck, unitTests, systemTests]
    if: startsWith(github.ref, 'refs/tags/release-')
    steps:
    - name: Publish release
      uses: softprops/action-gh-release@v2
      