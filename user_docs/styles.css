body {
  margin: 0 auto;
  max-width: 50em;
  font-family: "Helvetica", "Arial", sans-serif;
  line-height: 1.5;
  padding: 4em 1em;
  color: #333;
}

:lang(ar) body *, :lang(fa) body * {
  font-family: "Simplified Arabic", "Traditional Arabic", "Arial", sans-serif !important;
}

h1 {
  color:white;
  background-color: #472F5F; /* NVDA purple */
}

h2 {
  margin-top: 1em;
  padding-top: 1em;
}

h2, h3, h4, a {
  color: #472F5F; /* NVDA purple */
}

strong {
  color: #000;
}

/* tables */
table, td, th {
  border:1px solid black;
}
table{
  border-collapse: collapse;
}
td, th {
  padding: 0.25em;
}
th {
  color: #472F5F; /* NVDA purple */
}

/* code / pre */
code,
pre {
  background: #f6f8fa;
  border-bottom: 1px solid #d8dee9;
  color: #33104e;
}

code {
  padding: 2px 4px;
  vertical-align: text-bottom;
}
pre {
  padding: 1em;
  border-left: 2px solid #69c;
}

/* 
Definition styling.
https://txt2tags.org/markup.html
In t2t, definition lists are defined as follows:

: Definition list
  A list with terms
: Start term with colon
  And its definition follows
:
*/

/* Definition list */
dl {
  display: grid;
  grid-template-columns: auto;
}

/* Term of a definition */
dl > dt {
  grid-column-start: 1;
  font-style: italic;
  font-weight: bold;
  font-size: small;
}

/* Definition of a term */
dl > dd {
  display: inherit;
  grid-column-start: 2;
  margin-inline-start: 1em;
  font-size: small;
  font-style: italic;
}

thead:has(tr > th.hideHeaderRow) {
  display: none;
}

/* Numbering for table of contents.
.toc > ul > li is used as the base for the numbering.
This is because the first and only first level TOC element is the heading for the page, so it should be skipped.
*/
.toc > ul > li {
  list-style-type: none;
  counter-reset: css-counter 0; /* initializes counter to 0; use -1 for zero-based numbering */
}

.toc > ul > li li {
  counter-increment: css-counter 1; /* Increase the counter by 1. */
}

.toc > ul > li li:before {
  content: counter(css-counter) ". "; /* Apply counter before children's content. */
}

.toc > ul > li ul {
  list-style-type: none;
  counter-reset: css-counters 0; /* intializes counter, set -1 for zero-based counters */
}

.toc > ul > li ul li:before {
  counter-increment: css-counters;
  content: counters(css-counters, ".") " "; /* generates inherited counters from parents */
}

/* RTL */

/* Note there is a known bug where the numbering is not reversed for RTL languages.

Desired:
lorem ١.١
ipsum ٢.١
dolar ٣.١

Actual:
lorem ١.١
ipsum ١.٢
dolar ١.٣

This is due to counters always appending to the end of the list, and not the start.
Ideally there would be an option to reverse the numbering for RTL languages. 
*/
:lang(ar) .toc > ul > li ul li:before, :lang(fa) .toc > ul > li ul li:before {
  counter-increment: css-counters;
  content: counters(css-counters, ".", arabic-indic) " "; /* generates inherited counters from parents */
}
